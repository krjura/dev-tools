stages:
  - build
  - dist

variables:
  GRADLE_USER_HOME: "/opt/runner-cache/$CI_PROJECT_NAME-$CI_JOB_NAME/gradle"
  JIB_CACHE_DIR: "/opt/runner-cache/$CI_PROJECT_NAME-$CI_JOB_NAME/jib"

java_build:
  image: krjura/java-17-build-env:1.0.0
  stage: build
  tags:
    - docker_small
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-java"
    expire_in: "1 day"
    when: on_success
    paths:
      - "build"
  dependencies: []
  needs: []
  script:
    - bash ./gradlew --no-daemon --info -Dspring.profiles.active=test,jenkins build installDist

angular_build:
  image: krjura/angular-build-env:16.3-b1
  stage: build
  tags:
    - docker_small
  only:
    - master
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-angular"
    expire_in: "1 day"
    when: on_success
    paths:
      - "frontend/angular-web/dist"
  cache:
    key: "cache-$CI_PROJECT_NAME-angular"
    when: 'on_success'
    paths:
      - frontend/angular-web/node_modules
      - frontend/angular-web/package-lock.json
  dependencies: []
  needs: []
  script:
    - bash ./frontend/angular-web/build-frontend.sh

create_distribution:
  image: krjura/java-17-build-env:1.0.0
  stage: dist
  tags:
    - docker_small
  only:
    - master
  dependencies:
    - java_build
    - angular_build
  needs:
    - java_build
    - angular_build
  script:
    - bash ./gradlew --no-daemon --info jib -Djib.console=plain -Djib.applicationCache=${JIB_CACHE_DIR}/app -Djib.baseImageCache=${JIB_CACHE_DIR}/base
